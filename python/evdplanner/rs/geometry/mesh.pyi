import numpy as np
from evdplanner.rs import Intersection, IntersectionSort, Ray, Vec3

class Mesh:
    origin: Vec3
    vertices: list[Vec3]
    normals: list[Vec3]
    areas: list[float]
    triangles: list[tuple[int, int, int]]
    def __init__(
        self, origin: Vec3, vertices: list[Vec3], triangles: list[tuple[int, int, int]]
    ) -> None: ...
    @staticmethod
    def from_file(path: str, num_samples: int = 10_000) -> "Mesh": ...
    def merge_nearby_vertices(self) -> None: ...
    def recalculate_normals(self) -> None: ...
    def recalculate_areas(self) -> None: ...
    def intersect(self, ray: Ray, sorting: IntersectionSort) -> Intersection: ...
    def triangles_as_vertex_array(self) -> np.ndarray: ...
    @property
    def num_triangles(self) -> int: ...
    @property
    def num_vertices(self) -> int: ...
    @property
    def surface_area(self) -> float: ...
    @property
    def volume(self) -> float: ...
    @property
    def bounding_box(self) -> tuple[Vec3, Vec3]: ...
